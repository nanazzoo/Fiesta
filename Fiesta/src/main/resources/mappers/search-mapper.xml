<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="searchMapper">
	
		<!--   <resultMap type="edu.kh.project.member.model.vo.Member" id="member"></resultMap> -->
	 	<resultMap type="Member" id="member_rm">
	 
	    <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
	    <id property = "memberNo" column="MEMBER_NO"/>
	    
	    <!-- 나머지 일반 컬럼 -->
	     <result property="memberEmail" column="MEMBER_EMAIL" />
	     <result property="memberPw" column="MEMBER_PW" />
	     <result property="memberName" column="MEMBER_NAME" />
	     <result property="memberNickname" column="MEMBER_NICKNAME" />
	     <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
	     <result property="enrollDate" column="ENROLL_DATE" />
	     <result property="memberOpenFl" column="MEMBER_OPEN_FL" />
	     <result property="secessionFl" column="SECESSION_FL" />
	     <result property="authority" column="AUTHORITY" />
	 	</resultMap>
	
		
		  <!-- 게시글 객체 저장용 resultMap -->
  	<resultMap type="Board" id="board_rm">  
     	<id property = "boardNo" column="BOARD_NO"/>
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardCreateDate" column="BOARD_CREATE_DATE" />
      <result property="boardDeleteFlag" column="BOARD_DEL_FL" />
      <result property="boardPubPriFlag" column="BOARD_PUB_PRI_FL" />
      <result property="commentBlockFlag" column="COMMENT_BLOCK_FL" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="likeCount" column="LIKE_COUNT" />
      <result property="memberNo" column="MEMBER_NO" />      
      <result property="memberNickname" column="MEMBER_NICKNAME" />      
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="likeCheck" column="LIKE_CHECK" />
      <result property="bookmarkCheck" column="BOOKMARK_CHECK" />
      <result property="myNo" column="MY_NO" />
      <result property="imgPath" column="IMG_PATH" />
      
  	</resultMap>
	
	
	
		
	  <resultMap type="BoardImg" id="boardImg_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "imgNo" column="IMG_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="imgOrder" column="IMG_ORDER" />
      <result property="imgAddress" column="IMG_ADDRESS" />
      <result property="imgAccessibility" column="IMG_ACCESSIBILITY" />
      <result property="imgOriginalName" column="IMG_ORIGINAL_NAME" />
      <result property="imgChangeName" column="IMG_CHANGE_NAME" />
      <result property="boardNo" column="BOARD_NO" />
  	</resultMap>
	
	
	
	
		<!-- 검색_관련 계정 수 -->
		<select id="selectAccountTotal" parameterType="string" resultType="_int">
			SELECT COUNT(*)
			FROM "MEMBER" 
			WHERE (MEMBER_NICKNAME LIKE UPPER('%${searchInput}%') OR MEMBER_NICKNAME LIKE LOWER('%${searchInput}%')
			OR MEMBER_NAME LIKE UPPER('%${searchInput}%') OR MEMBER_NAME LIKE LOWER('%${searchInput}%'))
			AND SECESSION_FL = 'N'
		</select>
		<!-- '&${searchInput}% -->
		
		
		<!-- 검색_게시글 수 -->
		<select id="selectBoardTotal" parameterType="string" resultType="_int">
			SELECT COUNT(*)
			FROM (SELECT DISTINCT BOARD_NO
						FROM "BOARD" 
						JOIN "MEMBER" USING(MEMBER_NO)
						JOIN "COMMENT" USING(BOARD_NO)
						WHERE (BOARD_CONTENT LIKE UPPER('%#${searchInput}%') OR BOARD_CONTENT LIKE LOWER('%#${searchInput}%')
						OR COMMENT_CONTENT LIKE UPPER('%#${searchInput}%') OR COMMENT_CONTENT LIKE LOWER('%#${searchInput}%'))
						AND BOARD_DEL_FL = 'N'
						AND SECESSION_FL = 'N')	
		</select>
	
	
	
		<!-- 검색_관련 계정 조회 -->  <!-- SUBSTR(MEMBER_NICKNAME, 1, 15) MEMBER_NICKNAME 추가하기 -->
		<select id="selectAccountList" resultMap="member_rm">
			SELECT MEMBER_PROFILE_IMG, MEMBER_NICKNAME, MEMBER_NO, MEMBER_NAME	
			FROM "MEMBER" 
			WHERE SECESSION_FL = 'N'
			AND (MEMBER_NICKNAME LIKE UPPER('%${searchInput}%') OR MEMBER_NICKNAME LIKE LOWER('%${searchInput}%') OR MEMBER_NICKNAME LIKE ('%${searchInput}%')
			OR MEMBER_NAME LIKE UPPER('%${searchInput}%') OR MEMBER_NAME LIKE LOWER('%${searchInput}%') OR MEMBER_NAME LIKE ('%${searchInput}%'))
			<!-- AND MEMBER_NICKNAME != #{memberNickname} -->
			<![CDATA[AND ROWNUM <= 6 ]]>	
			ORDER BY MEMBER_NICKNAME
		</select>
		
		
		<!-- 인기게시글 조회 -->
		<select id="selectHotBoardList" resultMap="board_rm">
			SELECT * 
			FROM (SELECT DISTINCT B.BOARD_NO, BOARD_CREATE_DATE,
							(SELECT COUNT(*) 
							FROM BOARD_LIKE BL 
							WHERE BL.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
							(SELECT (IMG_ADDRESS || IMG_CHANGE_NAME) 
							FROM BOARD_IMG BI 
							WHERE BI.BOARD_NO = B.BOARD_NO 
							AND IMG_ORDER = '0') IMG_PATH,
							(SELECT COUNT(*) FROM "COMMENT" C
							 WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT
					FROM BOARD B
					JOIN "MEMBER" USING(MEMBER_NO)
					LEFT JOIN "COMMENT" ON ("COMMENT".BOARD_NO = B.BOARD_NO)
					JOIN BOARD_IMG BI ON (B.BOARD_NO = BI.BOARD_NO)
					WHERE BOARD_CREATE_DATE > (SYSDATE - 30)  
					AND (BOARD_CONTENT LIKE UPPER('%#${searchInput}%') OR BOARD_CONTENT LIKE LOWER('%#${searchInput}%')
					 OR COMMENT_CONTENT LIKE UPPER('%#${searchInput}%') OR COMMENT_CONTENT LIKE LOWER('%#${searchInput}%'))
					AND BOARD_DEL_FL = 'N'
					AND MEMBER_OPEN_FL = 'Y'
					AND IMG_ORDER = 0
					ORDER BY LIKE_COUNT DESC)
			<![CDATA[WHERE ROWNUM <= 9]]>
		</select>
  
  	<!-- 최근 게시글 조회 -->  <!-- <![CDATA[AND ROWNUM <= 9]]> -->
	  <select id="selectRecentBoardList" resultMap="board_rm">
				SELECT DISTINCT B.BOARD_NO, BOARD_CREATE_DATE,
								(SELECT COUNT(*) FROM BOARD_LIKE BL 
								WHERE BL.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
								(SELECT (IMG_ADDRESS || IMG_CHANGE_NAME) 
								FROM BOARD_IMG BI WHERE BI.BOARD_NO = B.BOARD_NO 
								AND IMG_ORDER = 0) IMG_PATH,
								(SELECT COUNT(*) FROM "COMMENT" C
								WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT	
				FROM BOARD B
				JOIN MEMBER USING(MEMBER_NO)
				LEFT JOIN "COMMENT" ON ("COMMENT".BOARD_NO = B.BOARD_NO)
				WHERE (BOARD_CONTENT LIKE UPPER('%#${searchInput}%') OR BOARD_CONTENT LIKE LOWER('%#${searchInput}%') 
				OR COMMENT_CONTENT LIKE UPPER('%#${searchInput}%') OR COMMENT_CONTENT LIKE LOWER('%#${searchInput}%'))
				AND BOARD_DEL_FL = 'N'
				AND MEMBER_OPEN_FL = 'Y'
				ORDER BY BOARD_CREATE_DATE DESC 
	  </select>
  
  
  	<!-- 최근 게시글 조회 _ 게시글 수 조회 -->
  	<select id="getListCount" parameterType="map" resultType="_int">
  			SELECT COUNT(*)
 			  FROM(	SELECT DISTINCT B.BOARD_NO, BOARD_CREATE_DATE,
							(SELECT COUNT(*) FROM BOARD_LIKE BL 
							WHERE BL.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
							(SELECT (IMG_ADDRESS || IMG_CHANGE_NAME) 
							FROM BOARD_IMG BI WHERE BI.BOARD_NO = B.BOARD_NO 
							AND IMG_ORDER = 0) IMG_PATH,
							(SELECT COUNT(*) FROM "COMMENT" C
							WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT	
							FROM BOARD B
							JOIN MEMBER USING(MEMBER_NO)
							LEFT JOIN "COMMENT" ON ("COMMENT".BOARD_NO = B.BOARD_NO)
							WHERE (BOARD_CONTENT LIKE UPPER('%#${searchInput}%') OR BOARD_CONTENT LIKE LOWER('%#${searchInput}%') 
							OR COMMENT_CONTENT LIKE UPPER('%#${searchInput}%') OR COMMENT_CONTENT LIKE LOWER('%#${searchInput}%'))
							AND BOARD_DEL_FL = 'N'
							AND MEMBER_OPEN_FL = 'Y'
							ORDER BY BOARD_CREATE_DATE DESC)
  	</select>
  
</mapper>
